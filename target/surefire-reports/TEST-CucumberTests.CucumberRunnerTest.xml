<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="10" failures="0" name="CucumberTests.CucumberRunnerTest" time="0.143" errors="10" skipped="0">
  <properties>
    <property name="idea.version" value="2022.1"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="java.vm.version" value="19.0.1+10-21"/>
    <property name="sun.boot.library.path" value="C:\Users\Win10Pro\.jdks\openjdk-19.0.1\bin"/>
    <property name="maven.multiModuleProjectDirectory" value="F:\___Training\JAVA\CucumberBDD\cucumberExample-master"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=";"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="user.script" value=""/>
    <property name="user.country" value="PL"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="F:\___Training\JAVA\CucumberBDD\cucumberExample-master"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="java.runtime.version" value="19.0.1+10-21"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="C:\Users\Win10Pro\AppData\Local\Temp\"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="stderr.encoding" value="Cp1250"/>
    <property name="os.name" value="Windows 11"/>
    <property name="maven.ext.class.path" value="C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.1\plugins\maven\lib\maven-event-listener.jar"/>
    <property name="classworlds.conf" value="C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.1\plugins\maven\lib\maven3\bin\m2.conf"/>
    <property name="sun.jnu.encoding" value="Cp1250"/>
    <property name="stdout.encoding" value="Cp1250"/>
    <property name="java.library.path" value="C:\Users\Win10Pro\.jdks\openjdk-19.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\PuTTY\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Win10Pro\AppData\Local\Microsoft\WindowsApps;C:\Users\Win10Pro\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.1\bin;;;."/>
    <property name="maven.conf" value="C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.1\plugins\maven\lib\maven3/conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="63.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.0"/>
    <property name="user.home" value="C:\Users\Win10Pro"/>
    <property name="user.timezone" value="Europe/Warsaw"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="19"/>
    <property name="user.name" value="Win10Pro"/>
    <property name="java.class.path" value="C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.1\plugins\maven\lib\maven3\boot\plexus-classworlds-2.6.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.1\plugins\maven\lib\maven3\boot\plexus-classworlds.license"/>
    <property name="java.vm.specification.version" value="19"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.classworlds.Launcher -Didea.version=2022.1 clean install"/>
    <property name="java.home" value="C:\Users\Win10Pro\.jdks\openjdk-19.0.1"/>
    <property name="user.language" value="pl"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.version" value="19.0.1"/>
    <property name="native.encoding" value="Cp1250"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.1\plugins\maven\lib\maven3"/>
    <property name="file.separator" value="\"/>
    <property name="java.version.date" value="2022-10-18"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.cpu.isalist" value="amd64"/>
  </properties>
  <testcase classname="Test summing" name="Summing with zero" time="0.111">
    <error message="The step &quot;Calculator is started&quot; is undefined. You can implement it using the snippet(s) below:

@Given(&quot;Calculator is started&quot;)
public void calculator_is_started() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@When(&quot;I add {int} and {int}&quot;)
public void i_add_and(Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&quot;result is {int}&quot;)
public void result_is(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
" type="io.cucumber.junit.UndefinedStepException">io.cucumber.junit.UndefinedStepException: The step &quot;Calculator is started&quot; is undefined. You can implement it using the snippet(s) below:

@Given(&quot;Calculator is started&quot;)
public void calculator_is_started() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@When(&quot;I add {int} and {int}&quot;)
public void i_add_and(Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&quot;result is {int}&quot;)
public void result_is(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

</error>
    <system-out>
Scenario: Summing with zero   &amp;#27;[90m# CucumberTests/Sum.feature:3&amp;#27;[0m
  &amp;#27;[33mGiven &amp;#27;[0m&amp;#27;[33mCalculator is started&amp;#27;[0m &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mWhen &amp;#27;[0m&amp;#27;[36mI add 0 and 3&amp;#27;[0m          &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mThen &amp;#27;[0m&amp;#27;[36mresult is 3&amp;#27;[0m            &amp;#27;[90m# null&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Test summing" name="Summing different numbers with zero for result 7" time="0.003">
    <error message="The step &quot;Calculator is started&quot; is undefined. You can implement it using the snippet(s) below:

@Given(&quot;Calculator is started&quot;)
public void calculator_is_started() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@When(&quot;I add {int} and {int}&quot;)
public void i_add_and(Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&quot;result is {int}&quot;)
public void result_is(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
" type="io.cucumber.junit.UndefinedStepException">io.cucumber.junit.UndefinedStepException: The step &quot;Calculator is started&quot; is undefined. You can implement it using the snippet(s) below:

@Given(&quot;Calculator is started&quot;)
public void calculator_is_started() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@When(&quot;I add {int} and {int}&quot;)
public void i_add_and(Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&quot;result is {int}&quot;)
public void result_is(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

</error>
    <system-out>
Scenario Outline: Summing different numbers with zero for result 7 &amp;#27;[90m# CucumberTests/Sum.feature:14&amp;#27;[0m
  &amp;#27;[33mGiven &amp;#27;[0m&amp;#27;[33mCalculator is started&amp;#27;[0m                                      &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mWhen &amp;#27;[0m&amp;#27;[36mI add 0 and 7&amp;#27;[0m                                               &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mThen &amp;#27;[0m&amp;#27;[36mresult is 7&amp;#27;[0m                                                 &amp;#27;[90m# null&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Test summing" name="Summing different numbers with zero for result 0" time="0.004">
    <error message="The step &quot;Calculator is started&quot; is undefined. You can implement it using the snippet(s) below:

@Given(&quot;Calculator is started&quot;)
public void calculator_is_started() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@When(&quot;I add {int} and {int}&quot;)
public void i_add_and(Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&quot;result is {int}&quot;)
public void result_is(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
" type="io.cucumber.junit.UndefinedStepException">io.cucumber.junit.UndefinedStepException: The step &quot;Calculator is started&quot; is undefined. You can implement it using the snippet(s) below:

@Given(&quot;Calculator is started&quot;)
public void calculator_is_started() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@When(&quot;I add {int} and {int}&quot;)
public void i_add_and(Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&quot;result is {int}&quot;)
public void result_is(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

</error>
    <system-out>
Scenario Outline: Summing different numbers with zero for result 0 &amp;#27;[90m# CucumberTests/Sum.feature:15&amp;#27;[0m
  &amp;#27;[33mGiven &amp;#27;[0m&amp;#27;[33mCalculator is started&amp;#27;[0m                                      &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mWhen &amp;#27;[0m&amp;#27;[36mI add 0 and 0&amp;#27;[0m                                               &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mThen &amp;#27;[0m&amp;#27;[36mresult is 0&amp;#27;[0m                                                 &amp;#27;[90m# null&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Test summing" name="Summing different numbers with zero for result -6" time="0.004">
    <error message="The step &quot;Calculator is started&quot; is undefined. You can implement it using the snippet(s) below:

@Given(&quot;Calculator is started&quot;)
public void calculator_is_started() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@When(&quot;I add {int} and {int}&quot;)
public void i_add_and(Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&quot;result is {int}&quot;)
public void result_is(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
" type="io.cucumber.junit.UndefinedStepException">io.cucumber.junit.UndefinedStepException: The step &quot;Calculator is started&quot; is undefined. You can implement it using the snippet(s) below:

@Given(&quot;Calculator is started&quot;)
public void calculator_is_started() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@When(&quot;I add {int} and {int}&quot;)
public void i_add_and(Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&quot;result is {int}&quot;)
public void result_is(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

</error>
    <system-out>
Scenario Outline: Summing different numbers with zero for result -6 &amp;#27;[90m# CucumberTests/Sum.feature:16&amp;#27;[0m
  &amp;#27;[33mGiven &amp;#27;[0m&amp;#27;[33mCalculator is started&amp;#27;[0m                                       &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mWhen &amp;#27;[0m&amp;#27;[36mI add -6 and 0&amp;#27;[0m                                               &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mThen &amp;#27;[0m&amp;#27;[36mresult is -6&amp;#27;[0m                                                 &amp;#27;[90m# null&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Test summing" name="Summing with zero" time="0.004">
    <error message="The step &quot;Calculator is started&quot; is undefined. You can implement it using the snippet(s) below:

@Given(&quot;Calculator is started&quot;)
public void calculator_is_started() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@When(&quot;I add {int} and {int}&quot;)
public void i_add_and(Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&quot;result is {int}&quot;)
public void result_is(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
" type="io.cucumber.junit.UndefinedStepException">io.cucumber.junit.UndefinedStepException: The step &quot;Calculator is started&quot; is undefined. You can implement it using the snippet(s) below:

@Given(&quot;Calculator is started&quot;)
public void calculator_is_started() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@When(&quot;I add {int} and {int}&quot;)
public void i_add_and(Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&quot;result is {int}&quot;)
public void result_is(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

</error>
    <system-out>
Scenario: Summing with zero   &amp;#27;[90m# CucumberTests/SumDataTable.feature:3&amp;#27;[0m
  &amp;#27;[33mGiven &amp;#27;[0m&amp;#27;[33mCalculator is started&amp;#27;[0m &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mWhen &amp;#27;[0m&amp;#27;[36mI add 0 and 3&amp;#27;[0m          &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mThen &amp;#27;[0m&amp;#27;[36mresult is 3&amp;#27;[0m            &amp;#27;[90m# null&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Test summing" name="Summing with zero" time="0.003">
    <error message="The step &quot;Calculator is started&quot; is undefined. You can implement it using the snippet(s) below:

@Given(&quot;Calculator is started&quot;)
public void calculator_is_started() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@When(&quot;I read parameters by DataTable&quot;)
public void i_read_parameters_by_DataTable() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&quot;result is {int}&quot;)
public void result_is(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
" type="io.cucumber.junit.UndefinedStepException">io.cucumber.junit.UndefinedStepException: The step &quot;Calculator is started&quot; is undefined. You can implement it using the snippet(s) below:

@Given(&quot;Calculator is started&quot;)
public void calculator_is_started() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@When(&quot;I read parameters by DataTable&quot;)
public void i_read_parameters_by_DataTable() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&quot;result is {int}&quot;)
public void result_is(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

</error>
    <system-out>
Scenario: Summing with zero           &amp;#27;[90m# CucumberTests/SumDataTable.feature:8&amp;#27;[0m
  &amp;#27;[33mGiven &amp;#27;[0m&amp;#27;[33mCalculator is started&amp;#27;[0m         &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mWhen &amp;#27;[0m&amp;#27;[36mI read parameters by DataTable&amp;#27;[0m &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mThen &amp;#27;[0m&amp;#27;[36mresult is 3&amp;#27;[0m                    &amp;#27;[90m# null&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Sumowanie" name="Sumowanie różnych liczb z zerem daje wynik 7" time="0.004">
    <error message="The step &quot;kalkulator jest włączony&quot; is undefined. You can implement it using the snippet(s) below:

@Zakładającże(&quot;kalkulator jest włączony&quot;)
public void kalkulator_jest_włączony() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@Kiedy(&quot;dodaję {int} i {int}&quot;)
public void dodaję_i(Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Wtedy(&quot;wynik wynosi {int}&quot;)
public void wynik_wynosi(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
" type="io.cucumber.junit.UndefinedStepException">io.cucumber.junit.UndefinedStepException: The step &quot;kalkulator jest włączony&quot; is undefined. You can implement it using the snippet(s) below:

@Zakładającże(&quot;kalkulator jest włączony&quot;)
public void kalkulator_jest_włączony() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@Kiedy(&quot;dodaję {int} i {int}&quot;)
public void dodaję_i(Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Wtedy(&quot;wynik wynosi {int}&quot;)
public void wynik_wynosi(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

</error>
    <system-out>
Szablon scenariusza: Sumowanie różnych liczb z zerem daje wynik 7 &amp;#27;[90m# CucumberTests/Sumowanie.feature:20&amp;#27;[0m
  &amp;#27;[33mZakładając, że &amp;#27;[0m&amp;#27;[33mkalkulator jest włączony&amp;#27;[0m                         &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mKiedy &amp;#27;[0m&amp;#27;[36mdodaję 0 i 7&amp;#27;[0m                                              &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mWtedy &amp;#27;[0m&amp;#27;[36mwynik wynosi 7&amp;#27;[0m                                            &amp;#27;[90m# null&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Sumowanie" name="Sumowanie różnych liczb z zerem daje wynik 0" time="0.003">
    <error message="The step &quot;kalkulator jest włączony&quot; is undefined. You can implement it using the snippet(s) below:

@Zakładającże(&quot;kalkulator jest włączony&quot;)
public void kalkulator_jest_włączony() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@Kiedy(&quot;dodaję {int} i {int}&quot;)
public void dodaję_i(Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Wtedy(&quot;wynik wynosi {int}&quot;)
public void wynik_wynosi(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
" type="io.cucumber.junit.UndefinedStepException">io.cucumber.junit.UndefinedStepException: The step &quot;kalkulator jest włączony&quot; is undefined. You can implement it using the snippet(s) below:

@Zakładającże(&quot;kalkulator jest włączony&quot;)
public void kalkulator_jest_włączony() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@Kiedy(&quot;dodaję {int} i {int}&quot;)
public void dodaję_i(Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Wtedy(&quot;wynik wynosi {int}&quot;)
public void wynik_wynosi(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

</error>
    <system-out>
Szablon scenariusza: Sumowanie różnych liczb z zerem daje wynik 0 &amp;#27;[90m# CucumberTests/Sumowanie.feature:21&amp;#27;[0m
  &amp;#27;[33mZakładając, że &amp;#27;[0m&amp;#27;[33mkalkulator jest włączony&amp;#27;[0m                         &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mKiedy &amp;#27;[0m&amp;#27;[36mdodaję 0 i 0&amp;#27;[0m                                              &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mWtedy &amp;#27;[0m&amp;#27;[36mwynik wynosi 0&amp;#27;[0m                                            &amp;#27;[90m# null&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Sumowanie" name="Sumowanie różnych liczb z zerem daje wynik -6" time="0.003">
    <error message="The step &quot;kalkulator jest włączony&quot; is undefined. You can implement it using the snippet(s) below:

@Zakładającże(&quot;kalkulator jest włączony&quot;)
public void kalkulator_jest_włączony() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@Kiedy(&quot;dodaję {int} i {int}&quot;)
public void dodaję_i(Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Wtedy(&quot;wynik wynosi {int}&quot;)
public void wynik_wynosi(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
" type="io.cucumber.junit.UndefinedStepException">io.cucumber.junit.UndefinedStepException: The step &quot;kalkulator jest włączony&quot; is undefined. You can implement it using the snippet(s) below:

@Zakładającże(&quot;kalkulator jest włączony&quot;)
public void kalkulator_jest_włączony() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@Kiedy(&quot;dodaję {int} i {int}&quot;)
public void dodaję_i(Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Wtedy(&quot;wynik wynosi {int}&quot;)
public void wynik_wynosi(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

</error>
    <system-out>
Szablon scenariusza: Sumowanie różnych liczb z zerem daje wynik -6 &amp;#27;[90m# CucumberTests/Sumowanie.feature:22&amp;#27;[0m
  &amp;#27;[33mZakładając, że &amp;#27;[0m&amp;#27;[33mkalkulator jest włączony&amp;#27;[0m                          &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mKiedy &amp;#27;[0m&amp;#27;[36mdodaję -6 i 0&amp;#27;[0m                                              &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mWtedy &amp;#27;[0m&amp;#27;[36mwynik wynosi -6&amp;#27;[0m                                            &amp;#27;[90m# null&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Sumowanie" name="Sumowanie różnych liczb z zerem daje wynik 4" time="0.004">
    <error message="The step &quot;kalkulator jest włączony&quot; is undefined. You can implement it using the snippet(s) below:

@Zakładającże(&quot;kalkulator jest włączony&quot;)
public void kalkulator_jest_włączony() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@Kiedy(&quot;dodaję {int} i {int}&quot;)
public void dodaję_i(Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Wtedy(&quot;wynik wynosi {int}&quot;)
public void wynik_wynosi(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
" type="io.cucumber.junit.UndefinedStepException">io.cucumber.junit.UndefinedStepException: The step &quot;kalkulator jest włączony&quot; is undefined. You can implement it using the snippet(s) below:

@Zakładającże(&quot;kalkulator jest włączony&quot;)
public void kalkulator_jest_włączony() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@Kiedy(&quot;dodaję {int} i {int}&quot;)
public void dodaję_i(Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Wtedy(&quot;wynik wynosi {int}&quot;)
public void wynik_wynosi(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

</error>
    <system-out>
Szablon scenariusza: Sumowanie różnych liczb z zerem daje wynik 4 &amp;#27;[90m# CucumberTests/Sumowanie.feature:23&amp;#27;[0m
  &amp;#27;[33mZakładając, że &amp;#27;[0m&amp;#27;[33mkalkulator jest włączony&amp;#27;[0m                         &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mKiedy &amp;#27;[0m&amp;#27;[36mdodaję 4 i 0&amp;#27;[0m                                              &amp;#27;[90m# null&amp;#27;[0m
  &amp;#27;[36mWtedy &amp;#27;[0m&amp;#27;[36mwynik wynosi 4&amp;#27;[0m                                            &amp;#27;[90m# null&amp;#27;[0m
</system-out>
  </testcase>
</testsuite>